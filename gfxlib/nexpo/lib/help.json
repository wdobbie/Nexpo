{"nexpo.console.dumpshort":{"summary":"\nPrint the contents of a variable, recursing a maximum of one level into tables.","pdesc":["One or more variables to print"],"pnames":["..."],"name":"nexpo.console.dumpshort","description":"\nPrint the contents of a variable, recursing a maximum of one level into tables."},"nexpo.start":{"summary":"\nStart running a script.","pdesc":{},"pnames":{},"see":["nexpo.stop","nexpo.graphics.onframe"],"name":"nexpo.start","description":"\nStart running a script. This should be the last line of every Nexpo script. \nIt passes control to Nexpo, which will run the render loop and process user input."},"nexpo.console.dump":{"summary":"\nRecursively print the contents of a variable.","pdesc":["One or more variables to print"],"pnames":["..."],"name":"nexpo.console.dump","description":"\nRecursively print the contents of a variable."},"nexpo.key.ondown":{"summary":"\nKeyboard button down callback function.","pdesc":["A string representation of the key name, eg 'a' or 'left_shift'","Scancode of the key","Bitmask of keyboard modifiers that were pressed at the time"],"pnames":["keyname","scancode","modifiers"],"see":["nexpo.key.onup","nexpo.key.onrepeat","nexpo.key.onchar"],"name":"nexpo.key.ondown","description":"\nKeyboard button down callback function. Implement this function to receive \na callback whenever a key is pressed."},"nexpo.mouse.onmove":{"summary":"\nMouse move callback function.","pdesc":["x coordinate of the mouse cursor","y coordinate of the mouse cursor"],"pnames":["x","y"],"see":["nexpo.mouse.onup","nexpo.mouse.ondown","nexpo.mouse.onscroll"],"name":"nexpo.mouse.onmove","description":"\nMouse move callback function. Implement this function to receive \na callback whenever the mouse position changes."},"nexpo.key.onup":{"summary":"\nKeyboard button down callback function.","pdesc":["A string representation of the key name, eg 'a' or 'left_shift'","Scancode of the key","Bitmask of keyboard modifiers that were pressed at the time"],"pnames":["keyname","scancode","modifiers"],"see":["nexpo.key.ondown","nexpo.key.onrepeat","nexpo.key.onchar"],"name":"nexpo.key.onup","description":"\nKeyboard button down callback function. Implement this function to receive \na callback whenever a key is pressed."},"nexpo.key.onrepeat":{"summary":"\nKeyboard button repeat callback function.","pdesc":["A string representation of the key name, eg 'a' or 'left_shift'","Scancode of the key","Bitmask of keyboard modifiers that were pressed at the time"],"pnames":["keyname","scancode","modifiers"],"see":["nexpo.key.onup","nexpo.key.ondown","nexpo.key.onchar"],"name":"nexpo.key.onrepeat","description":"\nKeyboard button repeat callback function. Implement this function to receive \na callback whenever a key has been held down and is producing repeated characters."},"nexpo.mouse.onscroll":{"summary":"\nMouse scroll wheel callback function.","pdesc":["Scroll amount in the vertical direction","Scroll amount in the horizontal direction"],"pnames":["yoffset","xoffset"],"see":["nexpo.mouse.onup","nexpo.mouse.ondown","nexpo.mouse.onmove"],"name":"nexpo.mouse.onscroll","description":"\nMouse scroll wheel callback function. Implement this function to receive \na callback whenever the mousewheel is scrolled."},"nexpo.controls.plot":{"summary":"\nCreate a time series plot.","pdesc":["A string containing the target variable to plot, eg 'mycircle.diameter'"],"usage":"c = circle() \nplot 'c.diameter'","pnames":["target"],"see":["slider"],"name":"nexpo.controls.plot","description":"\nCreate a time series plot. \nThe value of a variable or function will be plotted over time."},"nexpo.stop":{"summary":"\nStop running a script.","pdesc":{},"pnames":{},"see":["nexpo.start","nexpo.graphics.onframe"],"name":"nexpo.stop","description":"\nStop running a script. This function can be called at any time to stop rendering. \nNexpo will stop its render loop and control will return to where the start() function \nwas called (which should be the end of the script)."},"nexpo.key.onchar":{"summary":"\nKeyboard unicode character function.","pdesc":["The unicode codepoint of the key pressed"],"pnames":["codepoint"],"see":["nexpo.key.ondown","nexpo.key.onup","nexpo.key.onrepeat"],"name":"nexpo.key.onchar","description":"\nKeyboard unicode character function. Implement this function to receive \na callback with the unicode codepoint value when a key is pressed."},"nexpo.mouse.ondown":{"summary":"\nMouse button down callback function.","pdesc":["An integer representing the button pressed (1 = left, 2 = right, 3 = middle)","Bitmask of keyboard modifiers that were pressed at the time."],"pnames":["button","modifiers"],"see":["nexpo.mouse.onup","nexpo.mouse.onmove","nexpo.mouse.onscroll"],"name":"nexpo.mouse.ondown","description":"\nMouse button down callback function. Implement this function to receive \na callback whenever a mouse button is pressed."},"nexpo.mouse.pos":{"summary":"\n","pdesc":{},"pnames":{},"name":"nexpo.mouse.pos","description":"\n"},"nexpo.graphics.onframe":{"summary":"\nCallback function for when a new frame is ready to draw.","pdesc":["The seconds elapsed since the script started"],"pnames":["elapsed"],"see":["nexpo.start","nexpo.stop"],"name":"nexpo.graphics.onframe","description":"\nCallback function for when a new frame is ready to draw. Implement this  \nfunction to do your drawing for each frame. It will be called by Nexpo every \nscreen refresh until the user closes the window or the script calls \n<code>nexpo.stop()<\/code>."},"nexpo.mouse.onup":{"summary":"\nMouse button up callback function.","pdesc":["An integer representing the button pressed (1 = left, 2 = right, 3 = middle)","Bitmask of keyboard modifiers that were pressed at the time."],"pnames":["button","modifiers"],"see":["nexpo.mouse.ondown","nexpo.mouse.onmove","nexpo.mouse.onscroll"],"name":"nexpo.mouse.onup","description":"\nMouse button up callback function. Implement this function to receive \na callback whenever a mouse button is released."},"nexpo.controls.slider":{"summary":"\nCreate a slider control.","pdesc":["A string containing the target value to modify, eg 'mycircle.diameter'","The lower bound of the slider","The upper bound of the slider","The initial value of the slider"],"usage":"c = circle() \nslider('c.diameter', 0, 10, 0.1)","pnames":["target","min","max","initial"],"see":["plot","combobox","editbox","checkbox"],"name":"nexpo.controls.slider","description":"\nCreate a slider control. The slider can be used to modify a variable in a running script."}}